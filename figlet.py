#convert the given string into a list of tuples
#
def yell(text):
    row = {0: (), 1: (), 2: (), 3: (), 4: (),}
    for ctr in range(5):
        for ch in text.lower():
            try:
                row[ctr] += huruf[ch][ctr]
            except:
                if KeyError:
                    pass
    return [row[0],row[1],row[2],row[3],row[4]]

#transform the given list into figlets
def let(text, spc='*'):
    seq = yell(text)
    out = {0:"", 1:"", 2:"", 3:"", 4:""}
    ctr = 0
    for rows in seq:
        for row in rows:
            if row == 0:
                out[ctr] += ' '
            
            elif row <= -1:
                out[ctr] += f"{(-1*row)*' '}"
            else:
                out[ctr] += f'{row*spc}'
        ctr += 1
    return out

# 0= space, 1= x, 2= xx, 3= xxx, etc
# always ends with 0
# each letter contains five tuples
huruf = {
    'a': [(5,-1),(2,-1,2,-1),(5,-1),(2,-1,2,-1),(2,-1,2,-1)],
    'b': [(4,-2),(2,-1,2,-1),(4,-2),(2,-1,2,-1),(4,-2)],
    'c': [(5,-1),(2,-4),(2,-4),(2,-4),(5,-1)],
    'd': [(4,-2),(2,-1,2,-1),(2,-1,2,-1),(2,-1,2,-1),(4,-2)],
    'e': [(5,-1),(2,-4),(5,-1),(2,-4),(5,-1)],
    'f': [(5,-1),(2,-4),(5,-1),(2,-4),(2,-4)],
    'g': [(5,-1),(2,-2,1,-1),(2,-4),(2,-1,2,-1),(5,-1)],
    'h': [(2,-1,2,-1),(2,-1,2,-1),(5,-1),(2,-1,2,-1),(2,-1,2,-1)],
    'i': [(2,-1),(2,-1),(2,-1),(2,-1),(2,-1)],
    'j': [(-2,2,-1),(-2,2,-1),(-2,2,-1),(-2,2,-1),(4,-1)],
    'k': [(2,-2,1,-1),(2,-1,1,-2),(3,-3),(2,-1,1,-2),(2,-2,1,-1)],
    'l': [(2,-1,-2),(2,-3),(2,-3),(2,-3),(4,-1)],
    'm': [(2,-3,2,-1),(3,-1,3,-1),(2,-1,1,-1,2,-1),(2,-3,2,-1),(2,-3,2,-1)],
    'n': [(2,-3,2,-1),(3,-2,2,-1),(2,-1,1,-1,2,-1),(2,-2,3,-1),(2,-3,2,-1)],
    'o': [(5,0),(2,0,2,0),(2,0,2,0),(2,0,2,0),(5,0)],
    'p': [(5,0),(2,0,2,0),(5,0),(2,0,0,0,0),(2,0,0,0,0)],
    'q': [(5,-1),(2,-1,2,-1),(5,-1),(-3,2,-1),(-3,2,-1)],
    'r': [(4,0,0),(2,0,2,0),(4,0,0),(2,0,2,0),(2,0,2,0)],
    's': [(5,0),(2,0,0,0,0),(5,0),(0,0,0,2,0),(5,0)],
    't': [(6,0),(0,0,2,0,0,0),(0,0,2,0,0,0),(0,0,2,0,0,0),(0,0,2,0,0,0)],
    'u': [(2,0,2,0),(2,0,2,0),(2,0,2,0),(2,0,2,0),(5,0)],
    'v': [(2,0,2,0),(2,0,2,0),(2,0,2,0),(2,0,2,0),(0,3,0,0)],
    'w': [(2,0,1,0,2,0),(2,0,1,0,2,0),(2,0,1,0,2,0),(2,0,1,0,2,0),(0,2,0,2,0,0)],
    'x': [(1,-3,1,-1),(-1,1,-1,1,-2),(-2,1,-3),(-1,1,-1,1,-2),(1,-3,1,-1)],
    'y': [(2,0,0,2,0),(2,0,0,2,0),(6,0),(0,0,2,0,0,0),(0,0,2,0,0,0)],
    'z': [(5,-1),(-3,1,-2),(-2,1,-3),(-1,1,-4),(5,-1)],
    ' ': [(0,0),(0,0),(0,0),(0,0),(0,0)],
    '1': [(-2,2,-2),(-1,3,-2),(-2,2,-2),(-2,2,-2),(-1,4,-1)],
}